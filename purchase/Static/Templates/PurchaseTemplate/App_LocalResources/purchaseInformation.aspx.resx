<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="billingAddress1.Placeholder" xml:space="preserve">
    <value>Street Address 1</value>
  </data>
  <data name="billingAddress2.Placeholder" xml:space="preserve">
    <value>Street Address 2</value>
  </data>
  <data name="billingAddress3.Placeholder" xml:space="preserve">
    <value>Street Address 3</value>
  </data>
  <data name="billingAddress4.Placeholder" xml:space="preserve">
    <value>Street Address 4</value>
  </data>
  <data name="billingCellPhoneNumber.Placeholder" xml:space="preserve">
    <value>Cell Phone Number</value>
  </data>
  <data name="billingCity.Placeholder" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="billingConfirmEmail.Placeholder" xml:space="preserve">
    <value>Confirm Email Address</value>
  </data>
  <data name="billingEmail.Placeholder" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="billingFirstName.Placeholder" xml:space="preserve">
    <value>First</value>
  </data>
  <data name="billingInformationHeading.Text" xml:space="preserve">
    <value>Billing Information</value>
  </data>
  <data name="billingLastName.ng-required" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="billingLastName.Placeholder" xml:space="preserve">
    <value>Last</value>
  </data>
  <data name="billingMiddleName.Placeholder" xml:space="preserve">
    <value>Middle</value>
  </data>
  <data name="billingPhoneNumber.Placeholder" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="billingPostalZip.Placeholder" xml:space="preserve">
    <value>Postal/Zip Code</value>
  </data>
  <data name="billingProvinceState.Placeholder" xml:space="preserve">
    <value>Province/State</value>
  </data>
  <data name="cardNumber.Placeholder" xml:space="preserve">
    <value>Card Number</value>
  </data>
  <data name="continueShopping.Text" xml:space="preserve">
    <value>ContinueShopping</value>
  </data>
  <data name="creditCardLabel.Text" xml:space="preserve">
    <value>Pay With Credit Card</value>
  </data>
  <data name="cvc.Placeholder" xml:space="preserve">
    <value>CVC</value>
  </data>
  <data name="emailPermission.Text" xml:space="preserve">
    <value>I allow %OrganizationName% to contact me by email</value>
  </data>
  <data name="expiryCard.Placeholder" xml:space="preserve">
    <value>MM / YYYY</value>
  </data>
  <data name="homeOption.InnerHtml" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="homeOption.Value" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="mailPermission.Text" xml:space="preserve">
    <value>I allow %OrganizationName% to contact me by mail</value>
  </data>
  <data name="nameOnCard.Placeholder" xml:space="preserve">
    <value>Name On Card</value>
  </data>
  <data name="payPalLabel.Text" xml:space="preserve">
    <value>Pay With PayPal</value>
  </data>
  <data name="rfvAddress1.ErrorMessage" xml:space="preserve">
    <value>Address is required</value>
  </data>
  <data name="rfvAdressType.ErrorMessage" xml:space="preserve">
    <value>Address Type is required</value>
  </data>
  <data name="rfvCardNumber.ErrorMessage" xml:space="preserve">
    <value>Card Number is not valid</value>
  </data>
  <data name="rfvCellPhoneNumber.ErrorMessage" xml:space="preserve">
    <value>Cell Phone Number is required</value>
  </data>
  <data name="rfvCity.ErrorMessage" xml:space="preserve">
    <value>City is required</value>
  </data>
  <data name="rfvConfirmEmail.ErrorMessage" xml:space="preserve">
    <value>Email Address is required</value>
  </data>
  <data name="rfvCountry.ErrorMessage" xml:space="preserve">
    <value>Country is required</value>
  </data>
  <data name="rfvCvc.ErrorMessage" xml:space="preserve">
    <value>CVC is not valid</value>
  </data>
  <data name="rfvEmailAddress.ErrorMessage" xml:space="preserve">
    <value>Email Address is required</value>
  </data>
  <data name="rfvEmailsMatch.ErrorMessage" xml:space="preserve">
    <value>Emails do not match</value>
  </data>
  <data name="rfvExpiryCard.ErrorMessage" xml:space="preserve">
    <value>Expiry Date is not valid</value>
  </data>
  <data name="rfvFirstName.ErrorMessage" xml:space="preserve">
    <value>First Name is required</value>
  </data>
  <data name="rfvLastName.ErrorMessage" xml:space="preserve">
    <value>Last Name is required</value>
  </data>
  <data name="rfvMiddleName.ErrorMessage" xml:space="preserve">
    <value>Middle Name is required</value>
  </data>
  <data name="rfvNameOnCard.ErrorMessage" xml:space="preserve">
    <value>Name On Card is required</value>
  </data>
  <data name="rfvPhoneNumber.ErrorMessage" xml:space="preserve">
    <value>Phone Number is required</value>
  </data>
  <data name="rfvPostalZip.ErrorMessage" xml:space="preserve">
    <value>Postal/Zip Code is required</value>
  </data>
  <data name="rfvProvinceState.ErrorMessage" xml:space="preserve">
    <value>Province/State is required</value>
  </data>
  <data name="rfvTitle.ErrorMessage" xml:space="preserve">
    <value>Title Name is required</value>
  </data>
  <data name="rfvValidateEmail.ErrorMessage" xml:space="preserve">
    <value>Email is not valid</value>
  </data>
  <data name="rfvValidatePaymentFail.ErrorMessage" xml:space="preserve">
    <value>The payment failed</value>
  </data>
  <data name="rfvValidatePhone.ErrorMessage" xml:space="preserve">
    <value>Phone Number is not valid</value>
  </data>
  <data name="rfvValidatePostalZip.ErrorMessage" xml:space="preserve">
    <value>Postal/Zip is not valid</value>
  </data>
  <data name="shippAsBill.Text" xml:space="preserve">
    <value>Use shipping as billing address</value>
  </data>
  <data name="shippingAddress1.Placeholder" xml:space="preserve">
    <value>Street Address 1</value>
  </data>
  <data name="shippingAddress2.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="shippingAddress2.Placeholder" xml:space="preserve">
    <value>Street Address 2</value>
  </data>
  <data name="shippingAddress3.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="shippingAddress3.Placeholder" xml:space="preserve">
    <value>Street Address 3</value>
  </data>
  <data name="shippingAddress4.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="shippingAddress4.Placeholder" xml:space="preserve">
    <value>Street Address 4</value>
  </data>
  <data name="shippingCellPhoneNumber.Visible" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="shippingCellPhoneNumber.Placeholder" xml:space="preserve">
    <value>Cell Phone Number</value>
  </data>
  <data name="shippingCity.Placeholder" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="shippingConfirmEmail.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="shippingConfirmEmail.Placeholder" xml:space="preserve">
    <value>Confirm Email Address</value>
  </data>
  <data name="shippingEmail.Placeholder" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="shippingFirstName.Placeholder" xml:space="preserve">
    <value>First</value>
  </data>
  <data name="shippingInformationHeading.Text" xml:space="preserve">
    <value>Shipping Information</value>
  </data>
  <data name="shippingLastName.ng-required" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="shippingLastName.Placeholder" xml:space="preserve">
    <value>Last</value>
  </data>
  <data name="shippingMiddleName.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="shippingMiddleName.Placeholder" xml:space="preserve">
    <value>Middle</value>
  </data>
  <data name="shippingPhoneNumber.Visible" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="shippingPhoneNumber.Placeholder" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="shippingPostalZip.Placeholder" xml:space="preserve">
    <value>Postal/Zip Code</value>
  </data>
  <data name="shippingProvinceState.Placeholder" xml:space="preserve">
    <value>Province/State</value>
  </data>
  <data name="submit.Text" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="workOption.InnerHtml" xml:space="preserve">
    <value>Work</value>
  </data>
  <data name="workOption.Value" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="shippingTitle.ng-required" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="shippingTitle.Visible" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="billingAddress2.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="billingAddress3.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="billingAddress4.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="billingCellPhoneNumber.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="billingConfirmEmail.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="billingPhoneNumber.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="billingTitle.Visible" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="billingCellPhoneNumber.ng-required" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="billingPhoneNumber.ng-required" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="billingTitle.ng-required" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="shippingCellPhoneNumber.ng-required" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="shippingPhoneNumber.ng-required" xml:space="preserve">
    <value>true</value>
  </data>
</root>